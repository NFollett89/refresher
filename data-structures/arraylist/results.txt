
Testing NFArrayList() while empty
  - Pass | length() : 0 == 0
  - Pass | contains(0) : False == False
  - Pass | is_empty() : True == True
  - Pass | clear(), length() : 0 == 0
  - Pass | add(1) : [1] == [1]

Testing NFArrayList() while NOT empty
  - Pass | add(0, 0) : [0, 1] == [0, 1]
  - Pass | add(2, 2) : [0, 1, 2] == [0, 1, 2]
  - Pass | __iter__() : 0 == 0
  - Pass | __iter__() : 1 == 1
  - Pass | __iter__() : 2 == 2
  - Pass | add_all([3, 4, 5] : [0, 1, 2, 3, 4, 5] == [0, 1, 2, 3, 4, 5]
  - Pass | contains(10) : False == False
  - Pass | contains(2) : True == True
  - Pass | get(2) : 2 == 2
  - Pass | set(3, 2) : [0, 1, 2, 2, 4, 5] == [0, 1, 2, 2, 4, 5]
  - Pass | set(-6, 11) : [11, 1, 2, 2, 4, 5] == [11, 1, 2, 2, 4, 5]
  - Pass | add(10) : [11, 1, 2, 2, 4, 5, None, None, None, None, 10] == [11, 1, 2, 2, 4, 5, None, None, None, None, 10]
  - Pass | remove(0) : [1, 2, 2, 4, 5, None, None, None, None, 10] == [1, 2, 2, 4, 5, None, None, None, None, 10]
  - Pass | remove(4) : [1, 2, 2, 4, None, None, None, None, 10] == [1, 2, 2, 4, None, None, None, None, 10]
  - Pass | remove(8) : [1, 2, 2, 4, None, None, None, None] == [1, 2, 2, 4, None, None, None, None]
  - Pass | index_of(2) : 1 == 1
  - Pass | last_index(2) : 2 == 2
  - Pass | index_of(9001) : -1 == -1
  - Pass | lastindex(9001) : -1 == -1
  - Pass | is_empty() : False == False
  - Pass | remove_all([None]) : [1, 2, 2, 4] == [1, 2, 2, 4]
  - Pass | retain_all([1, 2]) : [1, 2, 2] == [1, 2, 2]
  - Pass | remove_all([2, 'a']) : [1] == [1]
  - Pass | clear(), length() : 0 == 0

Testing NFArrayList() methods with exceptions
  New arraylist: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
  - get(20) : None
	Pass | Exception: Index 20 is out of range for arraylist with length 0
  - remove(20) : None
	Pass | Exception: Index 20 is out of range for arraylist with length 0
  - remove_range(3, 1) : None
	Pass | Exception: Start index 3 is greater than end index 1
  - remove_range(-1, -3) : None
	Pass | Exception: Start index -1 is greater than end index -3
  - remove_range(1, 1) : None
	Pass | Exception: Start index 1 and end index 1 are the same
  - remove_range(9000, 9001) : None
	Pass | Exception: Start index 9000 is out of range for arraylist with length 10
  - remove_range(1, 9001) : None
	Pass | Exception: End index 9001 is out of range for arraylist with length 10
  - sub_list(3, 1) : None
	Pass | Exception: Start index 3 is greater than end index 1
  - sub_list(-1, -3) : None
	Pass | Exception: Start index -1 is greater than end index -3
  - sub_list(1, 1) : None
	Pass | Exception: Start index 1 and end index 1 are the same
  - sub_list(9000, 9001) : None
	Pass | Exception: Start index 9000 is out of range for arraylist with length 10
  - sub_list(1, 9001) : None
	Pass | Exception: End index 9001 is out of range for arraylist with length 10
  - set(9000, 1) : None
	Pass | Exception: Index 9000 is out of range for arraylist with length 10
  - set(-11, -11) : None
	Pass | Exception: Index -11 is out of range for arraylist with length 10
  - Pass | remove_range(3, 7) : [0, 1, 2, 7, 8, 9] == [0, 1, 2, 7, 8, 9]
  - Pass | remove_range(-3, -1) : [0, 1, 2, 3, 4, 5, 6, 9] == [0, 1, 2, 3, 4, 5, 6, 9]
  - Pass | remove_range(0, -1) : [9] == [9]
  - Pass | remove_range(0, length()) : [] == []
  - Pass | sub_list(3, 7) : [3, 4, 5, 6] == [3, 4, 5, 6]
  - Pass | sub_list(-3, -1) : [7, 8] == [7, 8]
  - Pass | sub_list(0, -1) : [0, 1, 2, 3, 4, 5, 6, 7, 8] == [0, 1, 2, 3, 4, 5, 6, 7, 8]
  - Pass | sub_list(0, length()) : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

Final result: Pass
